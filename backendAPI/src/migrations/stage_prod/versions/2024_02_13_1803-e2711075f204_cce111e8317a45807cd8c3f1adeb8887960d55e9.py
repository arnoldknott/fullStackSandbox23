# fmt: off
# ruff: noqa
""""cce111e8317a45807cd8c3f1adeb8887960d55e9"

Revision ID: e2711075f204
Revises: aac277f30dff
Create Date: 2024-02-13 18:03:52.009242+01:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'e2711075f204'
down_revision: Union[str, None] = 'aac277f30dff'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('category', sa.Column('category_id', sa.Integer(), nullable=False))
    op.drop_column('category', 'id')
    op.add_column('demoresource', sa.Column('demo_resource_id', sa.Integer(), nullable=False))
    op.drop_constraint('demoresource_category_id_fkey', 'demoresource', type_='foreignkey')
    op.create_foreign_key(None, 'demoresource', 'category', ['category_id'], ['category_id'])
    op.drop_column('demoresource', 'id')
    op.drop_constraint('demoresourcetaglink_tag_id_fkey', 'demoresourcetaglink', type_='foreignkey')
    op.drop_constraint('demoresourcetaglink_demo_resource_id_fkey', 'demoresourcetaglink', type_='foreignkey')
    op.create_foreign_key(None, 'demoresourcetaglink', 'tag', ['tag_id'], ['tag_id'])
    op.create_foreign_key(None, 'demoresourcetaglink', 'demoresource', ['demo_resource_id'], ['demo_resource_id'])
    op.add_column('tag', sa.Column('tag_id', sa.Integer(), nullable=False))
    op.drop_column('tag', 'id')
    op.add_column('user', sa.Column('user_id', sqlmodel.sql.sqltypes.GUID(), nullable=False))
    op.drop_column('user', 'id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('id', sa.UUID(), autoincrement=False, nullable=False))
    op.drop_column('user', 'user_id')
    op.add_column('tag', sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('tag_id_seq'::regclass)"), autoincrement=True, nullable=False))
    op.drop_column('tag', 'tag_id')
    op.drop_constraint(None, 'demoresourcetaglink', type_='foreignkey')
    op.drop_constraint(None, 'demoresourcetaglink', type_='foreignkey')
    op.create_foreign_key('demoresourcetaglink_demo_resource_id_fkey', 'demoresourcetaglink', 'demoresource', ['demo_resource_id'], ['id'])
    op.create_foreign_key('demoresourcetaglink_tag_id_fkey', 'demoresourcetaglink', 'tag', ['tag_id'], ['id'])
    op.add_column('demoresource', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'demoresource', type_='foreignkey')
    op.create_foreign_key('demoresource_category_id_fkey', 'demoresource', 'category', ['category_id'], ['id'])
    op.drop_column('demoresource', 'demo_resource_id')
    op.add_column('category', sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('category_id_seq'::regclass)"), autoincrement=True, nullable=False))
    op.drop_column('category', 'category_id')
    # ### end Alembic commands ###

# fmt: on
