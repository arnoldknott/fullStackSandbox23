# fmt: off
# ruff: noqa
"""""

Revision ID: 087ef64319d5
Revises: e87f4b435b9b
Create Date: 2024-02-27 10:44:08.820750+01:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '087ef64319d5'
down_revision: Union[str, None] = 'e87f4b435b9b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('protectedresource',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('protected_resource_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('protected_resource_id')
    )
    op.alter_column('user', 'last_accessed_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'last_accessed_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_table('protectedresource')
    # ### end Alembic commands ###

# fmt: on
