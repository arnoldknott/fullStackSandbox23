name: "Deploying Stage"

on:
  workflow_run:
    workflows: ["Testing"]
    types:
      - completed
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  REGISTRY: ghcr.io
  PROJECT_NAME: "fullstacksandbox23"

# TBD: rethink strategy creating jobs and separting into frontend and backend.
jobs:
    backend:
        runs-on: ubuntu-22.04
        environment: stage
        steps:
            - uses: actions/checkout@v3
            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                registry: ${{ env.REGISTRY }}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
            - name: Build for production
              run: |
                docker compose -f compose.yml build
            - name: Show images
              run: docker image list
            - name: Set CONTAINER_REPO variable
              run: echo "CONTAINER_REPO=${{ env.REGISTRY }}/${{ github.actor }}/${{ env.PROJECT_NAME }}" >> $GITHUB_ENV
            - name: Use CONTAINER_REPO variable
              run: |
                echo $CONTAINER_REPO
                echo ${{ env.CONTAINER_REPOÂ }}
            - name: Tag and push with latest and commit hash
              run: |
                docker tag ${{env.PROJECT_NAME}}-backend_api:latest ${{env.CONTAINER_REPO}}/backend_api:latest
                docker tag ${{env.PROJECT_NAME}}-backend_api:latest ${{env.CONTAINER_REPO}}/backend_api:$GITHUB_SHA
                docker push ${{env.CONTAINER_REPO}}/backend_api:latest
                docker push ${{env.CONTAINER_REPO}}/backend_api:$GITHUB_SHA
              # docker tag ${{env.PROJECT_NAME}}-backend_api:latest ${{env.CONTAINER_REPO}}/backend_api:$GITHUB_SHA
                # docker push ${{env.CONTAINER_REPO}}/backend_api:$GITHUB_SHA
            # docker tag ${{env.PROJECT_NAME}}-backend_api:latest $COMMIT_IMAGE
            # LATEST_IMAGE=${{ env.REGISTRY }}/${{ github.actor }}/${{env.PROJECT_NAME}}/backend_api:latest
              #   COMMIT_IMAGE=${{ env.REGISTRY }}/${{ github.actor }}/${{env.PROJECT_NAME}}/backend_api:$GITHUB_SHA
                # docker tag ${{env.PROJECT_NAME}}-backend_api:latest $LATEST_IMAGE
                # docker tag ${{env.PROJECT_NAME}}-backend_api:latest $COMMIT_IMAGE
              # LATEST_TAG=latest
                # docker tag $IMAGE_NAME $COMMIT_IMAGE
                # docker tag $IMAGE_NAME $LATEST_IMAGE
            # - name: Push to github container registry
            #   run: |
            #     docker push $LATEST_IMAGE
            #     docker push $COMMIT_IMAGE
            - name: Login to Azure
              uses: azure/login@v1
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            - name: Azure CLI script
              uses: azure/CLI@v1
              with:
                azcliversion: latest
                inlineScript: |
                  az account show
            - name: Deploy to staging
              run: echo "Deploying to staging"
            #   TBD: move production deployment to a separate workflow - trigger: workflow_dispatch (which is manual