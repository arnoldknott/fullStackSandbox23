name: "Deploying Stage"

on:
  workflow_run:
    workflows: ["Testing"]
    types:
      - completed
    branches:
      - main
      - stage

env:
  REGISTRY: ghcr.io
  CONTAINER_REPO: $REGISTRY/${{ github.repository_owner }}

jobs:
    containerize:
        runs-on: ubuntu-22.04
        permissions:
          id-token: write
          contents: read
          packages: write
        environment: stage
        steps:
            - uses: actions/checkout@v3
            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                registry: ${{ env.REGISTRY }}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
            - name: Build for production
              run: |
                docker compose -f compose.yml build
            - name: Show images
              run: docker image list
            # - name: Set CONTAINER_REPO variable
            #   run: echo "CONTAINER_REPO=${{ env.REGISTRY }}/${{ github.repository_owner }}" >> $GITHUB_ENV
            # - name: Use CONTAINER_REPO variable
            #   run: |
            #     echo $CONTAINER_REPO
            #     echo ${{ env.CONTAINER_REPO }}
            # - name: Echo repository_owner variable
            #   run: |
            #     echo ${{ github.repository_owner }}
            - name: Tag and push with latest and commit hash
              run: |
                docker tag ${{github.event.repository.name}}-backend_api:latest ${{env.CONTAINER_REPO}}/${{github.repository}}-backend_api:latest
                docker tag ${{github.event.repository.name}}-backend_api:latest ${{env.CONTAINER_REPO}}/${{github.repository}}-backend_api:$GITHUB_SHA
                docker push ${{env.CONTAINER_REPO}}/${{github.repository}}-backend_api:latest
                docker push ${{env.CONTAINER_REPO}}/${{github.repository}}-backend_api:$GITHUB_SHA

    deploy_stage:
      needs: containerize
      runs-on: ubuntu-22.04
      permissions:
        id-token: write
        packages: read
      environment: stage
      steps:
        - name: Login to GitHub Container Registry
          uses: docker/login-action@v3
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: Login to Azure
          uses: azure/login@v1
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        - name: Deploy to staging
        # TBD: changing mode to single here, as there is a terraform bug with the time-out, when setting containerapp to single!
          run: |
            az containerapp revision set-mode --name ${{ vars.AZURE_CONTAINERAPP_BACKEND }} --resource-group ${{vars.AZURE_RESOURCE_GROUP}} --mode single
            az containerapp update --name ${{ vars.AZURE_CONTAINERAPP_BACKEND }} --resource-group ${{vars.AZURE_RESOURCE_GROUP}} --image ${{env.CONTAINER_REPO}}/${{github.repository}}-backend_api:$GITHUB_SHA
        - name: Azure CLI script
          uses: azure/CLI@v1
          with:
            inlineScript: |
              az logout
              az cache purge
              az account clear