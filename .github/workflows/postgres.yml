name: Postgres

on:
  workflow_dispatch:
  # don't deploy any more and use Azure Database for PostgreSQL instead - solves the issue of read only volume for postgres user.
  # push:
  #   paths:
  #     - '.github/workflows/postgres.yml'

jobs:
  deploy-stage:
    runs-on: ubuntu-20.04
    environment: stage
    permissions:
      id-token: write
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_GITHUBACTIONSMANAGEDIDENTITY_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Deploy to staging
        env:
          IDENTITY_REF: "/subscriptions/${{secrets.AZURE_SUBSCRIPTION_ID}}/resourcegroups/${{vars.AZURE_RESOURCE_GROUP}}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/${{vars.AZURE_POSTGRESIDENTITY_NAME}}"
        run: |
          az containerapp secret set \
            --name ${{ vars.AZURE_CONTAINERAPP_POSTGRES }} \
            --resource-group ${{vars.AZURE_RESOURCE_GROUP}} \
            --secrets \
              "postgres-user=keyvaultref:${{ vars.AZURE_KEYVAULT_HOST }}/secrets/postgres-user,identityref:$IDENTITY_REF" \
              "postgres-password=keyvaultref:${{ vars.AZURE_KEYVAULT_HOST }}/secrets/postgres-password,identityref:$IDENTITY_REF"
          sleep 10
          az containerapp update \
            --name ${{ vars.AZURE_CONTAINERAPP_POSTGRES }} \
            --resource-group ${{vars.AZURE_RESOURCE_GROUP}} \
            --image postgres:${{vars.POSTGRES_IMAGE_TAG}} \
            --set-env-vars \
              "POSTGRES_DB=${{ vars.POSTGRES_DB }}" \
              "POSTGRES_USER=secretref:postgres-user" \
              "POSTGRES_PASSWORD=secretref:postgres-password"
        # TBD: consider deleting all existing environment variables before setting the new ones?
        # implemented as in https://learn.microsoft.com/en-us/azure/container-apps/manage-secrets?tabs=azure-cli
      - name: Logout from Azure
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az logout
            az cache purge
            az account clear

  deploy-prod:
    runs-on: ubuntu-22.04
    needs: deploy-stage
    environment: prod
    permissions:
      id-token: write
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_GITHUBACTIONSMANAGEDIDENTITY_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Deploy to production
        env:
          IDENTITY_REF: "/subscriptions/${{secrets.AZURE_SUBSCRIPTION_ID}}/resourcegroups/${{vars.AZURE_RESOURCE_GROUP}}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/${{vars.AZURE_POSTGRESIDENTITY_NAME}}"
        run: |
          az containerapp secret set \
            --name ${{ vars.AZURE_CONTAINERAPP_POSTGRES }} \
            --resource-group ${{vars.AZURE_RESOURCE_GROUP}} \
            --secrets \
              "postgres-host=keyvaultref:${{ vars.AZURE_KEYVAULT_HOST }}/secrets/postgres-host,identityref:$IDENTITY_REF" \
              "postgres-user=keyvaultref:${{ vars.AZURE_KEYVAULT_HOST }}/secrets/postgres-user,identityref:$IDENTITY_REF" \
              "postgres-password=keyvaultref:${{ vars.AZURE_KEYVAULT_HOST }}/secrets/postgres-password,identityref:$IDENTITY_REF"
          sleep 10
          az containerapp update \
            --name ${{ vars.AZURE_CONTAINERAPP_POSTGRES }} \
            --resource-group ${{vars.AZURE_RESOURCE_GROUP}} \
            --image postgres:${{vars.POSTGRES_IMAGE_TAG}} \
            --set-env-vars \
              "POSTGRES_HOST=secretref:postgres-host" \
              "POSTGRES_USER=secretref:postgres-user" \
              "POSTGRES_PASSWORD=secretref:postgres-password" \
              "POSTGRES_DB=${{ vars.POSTGRES_DB }}"
        # TBD: consider creating the database in postgres and/or getting the database name from there
        # TBD: consider deleting all existing environment variables before setting the new ones?
        # implemented as in https://learn.microsoft.com/en-us/azure/container-apps/manage-secrets?tabs=azure-cli
      - name: Logout from Azure
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az logout
            az cache purge
            az account clear
